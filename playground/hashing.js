const { SHA256 } = require("crypto-js");
const jwt = require("jsonwebtoken");

var data = {
  id: 10
};

var salting_key = "123abc";

var token_generated = jwt.sign(data, salting_key);
console.log(token_generated);

var decoded = jwt.verify(token_generated, salting_key);
console.log("decoded: ", decoded);
// var data = {
//   id: 4
// };

// // Server sends this token to the user, which contains the data and hashed data with salting

// var token = {
//   data: data,
//   hash: SHA256(JSON.stringify(data) + "somesecret").toString()
// };

// // Now the user does not know the server's salting key, so even if the user changed the data and rehashed it,
// // he would not know the salting key, and thus the server's hash and user's hash could never match
// // This is how data is protected using tokens and SHA256 hashing

// // hash generated by hashing data recieved with salting key
// var resulthash = SHA256(JSON.stringify(token.data) + "somesecret").toString();

// if (resulthash === token.hash) {
//   console.log("Data was not changed");
// } else {
//   console.log("Data was tampered with");
// }
